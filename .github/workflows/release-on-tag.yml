on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  check-release:
    runs-on: ubuntu-latest

    steps:
      - name: Get version from tag
        id: tag_name
        run: echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      - name: Check out repo
        uses: actions/checkout@v4.2.2

#      - name: Check for release
#        uses: actions/github-script@v6.0.0
#        id: release_status
#        with:
#          script: |
#            const tag = github.ref_name;
#
#            try {
#              const { id } = await github.request("GET /repos/{owner}/{repo}/releases/tags/{tag}", {
#                ...context.repo,
#                tag,
#              });
#
#              core.setOutput("release_id", id);
#              core.setOutput("exists", true);
#            } catch (error) {
#              if (error.status !== 404) {
#                throw error;
#              }
#            }
#
#      - name: Delete existing release
#        if: steps.release_status.outputs.exists == 'true'
#        uses: actions/github-script@v6.0.0
#        with:
#          script: |
#            await github.request("DELETE /repos/{owner}/{repo}/releases/{release_id}", {
#              ...context.repo,
#              release_id: ${{ steps.release_status.outputs.release_id }},
#            });

      - name: Get changelog entry
        uses: mindsers/changelog-reader-action@v2.2.3
        id: changelog_reader
        with:
          version: ${{ steps.tag_name.outputs.current_version }}

      - uses: softprops/action-gh-release@v2.2.1
        with:
          body: ${{ steps.changelog_reader.outputs.changes }}
          generate_release_notes: true

      - name: Dump steps context
        if: always()
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
